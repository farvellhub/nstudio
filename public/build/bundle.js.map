{"version":3,"sources":["webpack://nstudio/./node_modules/@farvell/jflow-core/index.js","webpack://nstudio/./node_modules/@farvell/jflow-core/src/Lightbox/lightbox.js","webpack://nstudio/./node_modules/@farvell/jflow-core/src/Lightbox/lightboxConstructor.js","webpack://nstudio/./node_modules/@farvell/jflow-core/src/Lightbox/lightboxHandler.js","webpack://nstudio/./node_modules/@farvell/jflow-core/src/eventHandler.js","webpack://nstudio/./node_modules/@farvell/jflow-core/src/parallaxText.js","webpack://nstudio/./node_modules/@farvell/jflow-core/src/style.js","webpack://nstudio/./src/styles/index.scss?2775","webpack://nstudio/./node_modules/typed.js/lib/typed.js","webpack://nstudio/webpack/bootstrap","webpack://nstudio/webpack/runtime/compat get default export","webpack://nstudio/webpack/runtime/define property getters","webpack://nstudio/webpack/runtime/hasOwnProperty shorthand","webpack://nstudio/webpack/runtime/make namespace object","webpack://nstudio/./src/main.js"],"names":["initMenu","menu","Handler","element","css","onClick","initDocument","document","onTimeout","window","addEventListener","then","x","Lightbox","images","texts","listen","Typed","strings","typeSpeed","backSpeed","startDelay","backDelay","loop","console","log"],"mappings":";;;;;;;;;AAAA;AACA,gBAAgB,mBAAO,EAAE,kFAAoB;AAC7C,eAAe,mBAAO,EAAE,4FAAyB;AACjD,eAAe,mBAAO,EAAE,kFAAoB;AAC5C,SAAS,mBAAO,EAAE,oEAAa;;AAE/B;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACXA,wBAAwB,mBAAO,EAAE,6FAAmB;AACpD,uBAAuB,mBAAO,EAAE,qGAAuB;;AAEvD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA,8BAA8B;AAC9B;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA,sBAAsB,sCAAsC;AAC5D,yBAAyB,iDAAiD;;AAE1E;AACA,kCAAkC,8BAA8B;;AAEhE;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,SAAS;AACT;;AAEA,SAAS;AACT;;AAEA,SAAS,OAAO,4CAA4C;;AAE5D;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,wD;AACA;AACA;AACA;AACA,C;;;;;;;;;;AC/IA,cAAc,mBAAO,EAAE,iEAAU;;AAEjC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,GAAG;AACH;AACA,C;;;;;;;;;;ACxEA,gBAAgB,mBAAO,CAAC,+EAAiB;;AAEzC;AACA;;AAEA,sBAAsB;AACtB;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS,GAAG;AACZ;AACA;AACA;AACA;AACA;AACA,SAAS,GAAG;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,uBAAuB;;AAE1C;AACA;AACA,oDAAoD,SAAS;;AAE7D;AACA;AACA,kC;AACA;AACA;AACA;;AAEA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA,C;;;;;;;;;;AC3FA;AACA;;AAEA,kBAAkB;AAClB;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,SAAS,GAAG;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,sCAAsC,iCAAiC;;AAEvE;AACA;AACA;AACA;AACA;AACA,aAAa,E;AACb,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA,oDAAoD,SAAS;;AAE7D;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA,C;;;;;;;;;;AC7GA;AACA;;AAEA;AACA,8B;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iDAAiD,WAAW;AAC5D,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;;;;;;;;;;;AC5DA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,GAAG,GAAG;;AAEN;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ,GAAG;;AAEH;AACA;AACA;;;;;;;;;;;;;AC3BA;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAyD;AAC7D;AACA,MAAM,EAKsB;AAC5B,CAAC;AACD,oCAAoC;AACpC;AACA;AACA;AACA;AACA,mBAAmB,8BAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA,0EAA0E,8BAAmB;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,8BAAmB;AAC7B;AACA;AACA,UAAU,8BAAmB;AAC7B;AACA;AACA,UAAU,8BAAmB;AAC7B;AACA;AACA,iBAAiB,8BAAmB;AACpC,UAAU;AACV;AACA;AACA;AACA,iCAAiC,+BAAmB;;AAEpD;;AAEA;AACA;AACA,EAAE;;AAEF,kCAAkC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEnjB,kDAAkD,0CAA0C,0DAA0D,EAAE;;AAExJ,sBAAsB,+BAAmB;;AAEzC,qBAAqB,+BAAmB;;AAExC;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,cAAc,OAAO;AACrB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,QAAQ;AACR;;AAEA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA,QAAQ;AACR;;AAEA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;;AAEA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,QAAQ;AACR;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB,gBAAgB,QAAQ;AACxB;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,QAAQ;AACR;;AAEA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA,EAAE;;AAEF;AACA;;AAEA,OAAO;AACP;AACA,iCAAiC,gCAAmB;;AAEpD;;AAEA;AACA;AACA,EAAE;;AAEF,oDAAoD,gBAAgB,sBAAsB,OAAO,2BAA2B,0BAA0B,yDAAyD,2BAA2B,EAAE,EAAE,EAAE,eAAe;;AAE/P,kCAAkC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEnjB,uCAAuC,uCAAuC,kBAAkB;;AAEhG,kDAAkD,0CAA0C,0DAA0D,EAAE;;AAExJ,mBAAmB,gCAAmB;;AAEtC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,gBAAgB,MAAM;AACtB,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA,iCAAiC;;AAEjC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;;AAER;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,mBAAmB;AAC7C;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,8CAA8C,uBAAuB,WAAW,4CAA4C,kDAAkD,0DAA0D,0DAA0D,WAAW,kCAAkC,iBAAiB,cAAc,EAAE,WAAW,0CAA0C,gBAAgB,YAAY,EAAE,iBAAiB,cAAc,EAAE,kBAAkB,YAAY,EAAE,WAAW;AAC/gB;AACA;AACA,gDAAgD,uBAAuB,qCAAqC,WAAW,2DAA2D,iCAAiC,yBAAyB,WAAW;AACvP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA,EAAE;;AAEF;AACA;AACA;;AAEA,OAAO;AACP;AACA;;AAEA;AACA;AACA,cAAc,OAAO;AACrB;AACA;;AAEA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA,iBAAiB,MAAM;AACvB,iBAAiB,OAAO;AACxB;AACA;AACA;;AAEA;AACA,iBAAiB,OAAO;AACxB;AACA;;AAEA;AACA,iBAAiB,OAAO;AACxB;AACA;;AAEA;AACA,iBAAiB,OAAO;AACxB;AACA;;AAEA;AACA,iBAAiB,QAAQ;AACzB;AACA;;AAEA;AACA,iBAAiB,QAAQ;AACzB;AACA;;AAEA;AACA,iBAAiB,OAAO;AACxB;AACA;;AAEA;AACA,iBAAiB,QAAQ;AACzB,iBAAiB,OAAO;AACxB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,QAAQ;AACzB,iBAAiB,OAAO;AACxB;AACA;AACA;;AAEA;AACA,iBAAiB,QAAQ;AACzB,iBAAiB,OAAO;AACxB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;;AAEA;AACA,iBAAiB,QAAQ;AACzB;AACA;;AAEA;AACA,iBAAiB,OAAO;AACxB;AACA;;AAEA;AACA;AACA,cAAc,MAAM;AACpB;AACA,qCAAqC;;AAErC;AACA;AACA,cAAc,MAAM;AACpB;AACA,2CAA2C;;AAE3C;AACA;AACA,cAAc,OAAO;AACrB,cAAc,MAAM;AACpB;AACA,6DAA6D;;AAE7D;AACA;AACA,cAAc,OAAO;AACrB,cAAc,MAAM;AACpB;AACA,2DAA2D;;AAE3D;AACA;AACA,cAAc,MAAM;AACpB;AACA,mEAAmE;;AAEnE;AACA;AACA,cAAc,OAAO;AACrB,cAAc,MAAM;AACpB;AACA,6DAA6D;;AAE7D;AACA;AACA,cAAc,OAAO;AACrB,cAAc,MAAM;AACpB;AACA,+DAA+D;;AAE/D;AACA;AACA,cAAc,MAAM;AACpB;AACA,qCAAqC;;AAErC;AACA;AACA,cAAc,OAAO;AACrB,cAAc,MAAM;AACpB;AACA,6CAA6C;;AAE7C;AACA;AACA,cAAc,OAAO;AACrB,cAAc,MAAM;AACpB;AACA,+CAA+C;;AAE/C;AACA;AACA,cAAc,MAAM;AACpB;AACA;AACA;;AAEA;AACA;;AAEA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,EAAE;;AAEF,kCAAkC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEnjB,kDAAkD,0CAA0C,0DAA0D,EAAE;;AAExJ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB,gBAAgB,MAAM;AACtB,kBAAkB,OAAO;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB,gBAAgB,MAAM;AACtB,kBAAkB,OAAO;AACzB;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA,EAAE;;AAEF;AACA;AACA;;AAEA,OAAO;AACP;AACA,CAAC;AACD,C;;;;;;UC3hCA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,gCAAgC,YAAY;WAC5C;WACA,E;;;;;WCPA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,wF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;;;;;;;;;;;;;;ACNA;AACA;CAIA;;CAGA;;AACA,IAAMA,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACtB,MAAMC,IAAI,GAAG,IAAIC,wDAAJ,CAAY;AACxBC,WAAO,EAAE,MADe;AAExBC,OAAG,EAAE,CAAC,UAAD,EAAa,UAAb;AAFmB,GAAZ,EAIb;AACCD,WAAO,EAAE,aADV;AAECC,OAAG,EAAE,CAAC,eAAD,EAAkB,aAAlB;AAFN,GAJa,CAAb;AASA,SAAOH,IAAI,CAACI,OAAL,CAAc,cAAd,CAAP;AACA,CAXD,C,CAaA;;;AACA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAC1B,MAAMC,QAAQ,GAAG,IAAIL,wDAAJ,CAAY;AAC5BC,WAAO,EAAE,UADmB;AAE5BC,OAAG,EAAE,CAAC,WAAD,EAAc,QAAd;AAFuB,GAAZ,EAIjB;AACCD,WAAO,EAAE,QADV;AAECC,OAAG,EAAE;AAFN,GAJiB,CAAjB;AASA,SAAOG,QAAQ,CAACC,SAAT,CAAoB,GAApB,CAAP;AACA,CAXD,C,CAaA;;;AACAC,MAAM,CAACC,gBAAP,CAAwB,MAAxB,EAAgC,YAAM;AACrCV,UAAQ,GACNW,IADF,CACQL,YAAY,EADpB,EAEEK,IAFF,CAEO,YAAM;AACX,QAAMC,CAAC,GAAG,IAAIC,yDAAJ,CAAa;AACtBC,YAAM,EAAE,YADc;AAEtBC,WAAK,EAAE,cAFe;AAGtBX,SAAG,EAAE,CAAC,WAAD,EAAc,QAAd;AAHiB,KAAb,CAAV;AAKAQ,KAAC,CAACI,MAAF;AACA,GATF;AAUA,CAXD,E,CAaA;;AACA,IAAIC,iDAAJ,CAAU,QAAV,EAAoB;AACnBC,SAAO,EAAE,CAAE,GAAF,EAAO,YAAP,EAAqB,GAArB,EAA0B,aAA1B,EAAyC,EAAzC,EAA6C,MAA7C,CADU;AAEnBC,WAAS,EAAE,EAFQ;AAGnBC,WAAS,EAAE,EAHQ;AAInBC,YAAU,EAAE,IAJO;AAKnBC,WAAS,EAAE,IALQ;AAMnBC,MAAI,EAAE;AANa,CAApB;AASAC,OAAO,CAACC,GAAR,CAAY,kBAAZ,E","file":"bundle.js","sourcesContent":["// Import library with common.js\r\nconst Handler = require( \"./src/eventHandler\" ),\r\n    Lightbox = require( \"./src/Lightbox/lightbox\" ),\r\n    Parallax = require( \"./src/parallaxText\" ),\r\n\tStyle = require( \"./src/style\" );\r\n\r\nmodule.exports = {\r\n    Handler,\r\n\tStyle,\r\n    Lightbox,\r\n    Parallax\r\n};\r\n","const LightboxHandler = require( \"./lightboxHandler\" ),\r\n\tLightboxConstructor = require( \"./lightboxConstructor\" );\r\n\r\n// Lightbox logic and constructor\r\nmodule.exports = class Lightbox {\r\n\r\n    // fetching data classes to control lightbox\r\n    constructor( config ) {\r\n        // Set param config\r\n\t\tthis.config = (new LightboxConstructor( config ))._setLightboxConfig(config);\r\n\r\n        // Initializing handler\r\n        this.handler = new LightboxHandler({\r\n            element: \"lightbox\",\r\n            css: config.css\r\n        });\r\n        console.log(this.handler, LightboxHandler)\r\n        // Init roullette of images\r\n        this._initRoullette();\r\n\r\n        // Return listen lightbox\r\n        /* return this.listen; */\r\n    }\r\n\r\n    // initializing roullette from fetched images\r\n    _initRoullette() {\r\n        this.config.images.forEach(( img, index ) => {\r\n            const image = img.cloneNode(),\r\n                text = this.config.texts[ index ];\r\n\r\n            // Reset image element to lightbox css classes\r\n            image.classList.remove( ...image.classList );\r\n            image.classList.add( \"roullette-image\", this.control );\r\n\r\n            // Pushing images to roullete\r\n            this.config.roullette.img.appendChild( image );\r\n            this.config.roullette.txt.push( text.textContent );\r\n        });\r\n\r\n        // Finally sets the lightbox size to length of roullette\r\n        this.lightboxSize = this.config.roullette.txt.length;\r\n    }\r\n\r\n    // SETTERS\r\n    _setPhoto( src ) { this.config.lightbox.photo.src = src; }\r\n    _setCaption( text ) { this.config.lightbox.caption.textContent = text; }\r\n\r\n    // Update position ( certain positions are conditioned buttons )\r\n    _setLastPosition( position ) { this.lastPosition = position; }\r\n\r\n    _updateFromAll( position ) {\r\n        const photo = this.config.roullette.img.children,\r\n            caption = this.config.roullette.txt;\r\n\r\n        this._setPhoto( photo.position.src );\r\n        this._setCaption( caption.position );\r\n    }\r\n\r\n    // Update from previous button\r\n    _updateFromPrevious() {\r\n        const position = this.lastPosition > 0\r\n            ? --this.lastPosition \r\n            : this.lightboxSize;\r\n\r\n        this._updateFromAll( position );\r\n        \r\n        return position;\r\n    }\r\n\r\n    // Update from next button\r\n    _updateFromNext() {\r\n        const position = this.lastPosition < this.lightboxSize\r\n            ? ++this.lastPosition \r\n            : 0;\r\n\r\n        this._updateFromAll( position );\r\n\r\n        return position;\r\n    }\r\n\r\n    // Update from roullete image\r\n    _updateFromRoullette( index ) {\r\n        const length = this.config.conditions.length,\r\n            position = index - length;\r\n\r\n        this._updateFromAll( position );\r\n\r\n        return position;\r\n    }\r\n\r\n    // Update from grid of images\r\n    _updateFromImages( index ) {\r\n        const length = this.config.conditions.length,\r\n            position = ( index - this.lightboxSize)  - length;\r\n\r\n        this._updateFromAll( position );\r\n\r\n        return position;\r\n    }\r\n\r\n    // If conditions return True\r\n    _validUpdate ( classList, name ) {\r\n        const conditions = this.config.conditions;\r\n\r\n        return classList.contains( conditions.name );\r\n    }\r\n\r\n    // Route depending on position\r\n    _updateFrom( classList, index ) {\r\n        let position;\r\n\r\n        if ( this._validUpdate( classList, \"roullette\" ) ) {\r\n            position = this._updateFromRoullette(index);\r\n\r\n        } else if ( this._validUpdate( classList, \"previous\" ) ) {\r\n            position = this._updateFromPrevious();\r\n\r\n        } else if ( this._validUpdate( classList, \"next\" ) ) {\r\n            position = this._updateFromNext();\r\n\r\n        } else { position = this._updateFromImages( index ); }\r\n\r\n        this._setLastPosition( position );\r\n    }\r\n\r\n    // Update state from all conditions\r\n    _update() {\r\n        \r\n        const lastClick = this.handler.lastClicked(),\r\n            classList = lastClick.element.classList;\r\n            \r\n        if ( classList.contains( this.config.exit ) ) return;\r\n\r\n        this._updateFrom( classList, lastClick.index );\r\n    }\r\n\r\n    // Listener handler\r\n    async listen() {\r\n        console.log(this.handler)\r\n        this.handler.setAfterFunc( this._update, this ); \r\n        return this.handler.onClick( this.config.control, this.conditions )\r\n\t\t\t.then( console.log( \"Lightbox is working!\" ) );\r\n    }\r\n}","const Style = require( \"../style\" );\r\n\r\n// Lightbox DOM constructor\r\nmodule.exports = class LightboxConstructor {\r\n\tconstructor( config ) {\r\n\t\tthis._createLightbox();\r\n\t\tthis._styleLightbox( config.color );\r\n\t\t\r\n\t\t/* return this._setLightboxConfig( config ) */\r\n\t}\r\n\t\r\n    // Setting lightbox properties\r\n\t_setLightboxConfig( config ) {\r\n\t\treturn {\r\n\t\t\timages: [ ...document.getElementsByClassName( config.images ) ],\r\n\t\t\ttexts: [ ...document.getElementsByClassName( config.texts ) ],\r\n\t\t\tlightbox: {\r\n\t\t\t\tphoto: document.getElementById( \"lighbox-photo\" ),\r\n\t\t\t\tcaption: document.getElementById( \"lightbox-caption\" ),\r\n\t\t\t},\r\n\t\t\troullette: {\r\n\t\t\t\timg: document.getElementById( \"lightbox-roullette\" ),\r\n\t\t\t\ttxt: []\r\n\t\t\t},\r\n\t\t\tcontrol: \"lightbox-control\",\r\n        \texit: \"lightbox-close\",\r\n        \tconditions: {\r\n           \t\troullette: \"roullette-image\",\r\n            \tprevious: \"previous-button\", \r\n            \tnext: \"next-button\",\r\n            \tlength: 2\r\n\t\t\t}\r\n        };\r\n\t}\r\n\r\n\t// Putting lightbox html to DOM\r\n\t_createLightbox() {\r\n\t\tconst wrapper = document.createElement( \"section\" );\r\n\t\t\r\n\t\twrapper.setAttribute( \"id\", \"lightbox\" );\r\n\t\twrapper.setAttribute( \"class\", \"fixed-wrapper lightbox-wrapper\" );\r\n\r\n\t\twrapper.innerHTML += `\r\n\t\t\t<span class=\"button fixed-button lightbox-close lightbox-control\">x</span>\r\n\r\n\t\t\t<section class=\"wrapper lightbox\">\r\n\t\t\t\t<figure class=\"wrapper lightbox-photo-wrapper\">\r\n\t\t\t\t\t<article class=\"lightbox-previous\">\r\n\t\t\t\t\t\t<span class=\"button lightbox-button vertical-align previous-button lightbox-control\"><</span>\r\n\t\t\t\t\t</article>\r\n\t\t\t\t\t<img id=\"lightbox-photo\" class=\"lightbox-photo all-align\" src=\"#\" alt=\"lightbox-main-photo\">\r\n\t\t\t\t\t<article class=\"lightbox-next\">\r\n\t\t\t\t\t\t<span class=\"button lightbox-button vertical-align next-button lightbox-control\"><</span>\r\n\t\t\t\t\t</article>\r\n\t\t\t\t</figure>\r\n\t\t\t</section>\r\n\r\n\t\t\t<p id=\"lightbox-caption\" class=\"horizontal-align lightbox-caption\"></p>\r\n\t\t\t<nav id=\"lightbox-roullette\" class=\"horizontal-align roullette\"></nav>\r\n\t\t`;\r\n\t\t\r\n\t\tdocument.body.style.position = \"relative\";\r\n\t\tdocument.body.appendChild( wrapper );\r\n\t}\r\n\r\n\t_styleLightbox( color = \"#1d1d1d\" ) {\r\n\t\tnew Style({\r\n\r\n\t\t\tbackgroundColor: color\r\n\r\n\t\t}).setStyles( \"lightbox-wrapper\" );\r\n\t}\r\n}","const Handler = require(\"../eventHandler\");\r\n\r\n// Lightbox event handler \r\nmodule.exports = class LightboxHandler extends Handler {\r\n\r\n    // ... Animation { element: idName, css: className || [className] }\r\n    constructor( ...animations ) {\r\n\r\n        // Init animations.\r\n        super( animations );\r\n\r\n       /*  const setAfterFunc = this.setAfterFunc \r\n        const lastClicked = this.lastClicked\r\n        const onClick = this.onClick.bind\r\n\r\n        console.log(this, Handler)\r\n\r\n        return Object.freeze(Object.create({\r\n            setAfterFunc,\r\n            lastClicked,\r\n            onClick\r\n        })); */\r\n        // Return function to Lightbox logic\r\n        /* return Object.freeze(Object.create({\r\n            setAfterFunc: this.setAfterFunc.bind( this ),\r\n            lastClicked: this.lastClicked.bind( this ),\r\n            onClick: this.onClick.bind( this )\r\n        })); */\r\n    }\r\n\r\n    // Needs for logic in Lightbox, controls roullette updates\r\n    setAfterFunc( func, that, ...args ) {\r\n        this._afterFunc = () => {\r\n            if ( typeof func == \"function\"\r\n                && typeof that == \"object\" )\r\n                return that[ func.name ]( args );\r\n        };\r\n\r\n        return this;\r\n    }\r\n\r\n    // Only update animation if its condition returns true\r\n    _isConditioned( conditions ) {\r\n        if ( conditions === null ) return false;\r\n            \r\n        const classList = this.lastClick.element.classList;\r\n        let isConditioned = false;\r\n\r\n        Object.keys( conditions ).forEach(( c ) => {\r\n            if ( classList.contains( conditions[ c ] ) ) \r\n                isConditioned = true;\r\n        });\r\n\r\n        return isConditioned;\r\n    }\r\n\r\n    // Controls if have conditions\r\n    _trigger( conditions ) {\r\n        if ( this._isConditioned( conditions ) ) return;\r\n\r\n        this._animate();\r\n    }\r\n\r\n    // Execute all functions atached to the event\r\n    _execution( conditions = null ) {\r\n        this._trigger( conditions );\r\n        \r\n        if ( typeof this._afterFunc === \"function\" )\r\n            this._afterFunc();\r\n    }\r\n\r\n    // Needs in Lightbox class, return last clicked element\r\n    lastClicked() { return this.lastClick; }\r\n\r\n    // Each click updates lastClick variable \r\n    async onClick( controls, conditions ) {\r\n        const keys = document.querySelectorAll( `.${controls}` );\r\n\r\n        keys.forEach(( e, i ) => {\r\n            e.addEventListener(\"click\", () => {\r\n                this.lastClick = { \r\n                    \"element\": e,\r\n                    \"index\": (i - 1) \r\n                };\r\n\r\n                this._execution( conditions );\r\n            });\r\n        });\r\n\r\n        return this;\r\n    }\r\n}","// Generic handler\r\nmodule.exports = class Handler {\r\n\r\n    // Animation { element: idName, css: className || [className] }\r\n    constructor( ...animations ) {\r\n        \r\n        this.animations = [];\r\n        this._initAnimations( animations );\r\n\r\n        // Return event methods\r\n        /* return Object.freeze(Object.create({\r\n\r\n            onTimeout: this.onTimeout.bind( this ),\r\n            onClick: this.onClick.bind( this ),\r\n            onScroll: this.onScroll.bind( this )\r\n\r\n        })); */\r\n    }\r\n\r\n    // Setting animations object and css array\r\n    _initAnimations( animations ) {\r\n        animations.forEach(( anim, index ) => {\r\n            this.animations.push({\r\n                element: document.getElementById( anim.element ),\r\n                css: Array.isArray( anim.css ) ? anim.css : [ anim.css ]\r\n            });\r\n\r\n            this._setDefaultAnimation( index );\r\n        });\r\n    }\r\n\r\n    // If css provided is not an array\r\n    _setDefaultAnimation( index ) {\r\n\t\tconst animation = this.animations[ index ],\r\n\t\t\telement = animation.element,\r\n\t\t\tcss = animation.css;\r\n\r\n\t\tif ( css.length > 1 ) this._toggleAnimation( element, css[0] );\r\n    }\r\n\r\n    // Toggle class list item\r\n    _toggleAnimation( element, css ) { element.classList.toggle( css ); }\r\n\r\n    // For each animation, animate\r\n    _animate() {\r\n        this.animations.forEach(( animation ) => {\r\n            animation.css.forEach(( cssName ) => {\r\n                this._toggleAnimation( animation.element, cssName );\r\n            });        \r\n        });\r\n    }\r\n\r\n    // Timeout event, animate given time\r\n    async onTimeout( time ) {\r\n        const timer = setTimeout(() => {\r\n            this._animate();\r\n        }, time);\r\n\t\t\r\n        return this;\r\n    }\r\n\r\n    // Click event triggers animation\r\n    async onClick( controls ) {\r\n        const keys = document.querySelectorAll( `.${controls}` );\r\n\r\n        keys.forEach(( trigger ) => {\r\n            trigger.addEventListener(\"click\", ( e ) => {\r\n\t\t\t\te.stopPropagation();\r\n                this._animate();\r\n            });\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n\t// If Offset is inside conditions, animate\r\n\t_triggerScroll( scroll, offset, scrolled ) {\r\n\t\tif (( scroll <= offset && scrolled ) || \r\n            ( scroll >= offset && !scrolled )) {\r\n                \r\n            this._animate();\r\n\t\t\treturn !scrolled;\r\n        }\r\n\r\n\t\treturn scrolled;\r\n\t}\r\n\r\n    // Controls scroll when loads document\r\n    _initScroll( offset ) {\r\n        if ( window.scrollY >= offset ) {\r\n            this._animate();\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    // Scroll event triggers animation\r\n    async onScroll( offset ) {\r\n        let scrolled = this._initScroll( offset );\r\n\r\n        document.addEventListener(\"scroll\", () => {\r\n            const scroll = window.scrollY;\r\n\t\t\tscrolled = this.triggerScroll( scroll, offset, scrolled );\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n}","/* Parallax movement */\r\nmodule.exports = class Parallax {\r\n\r\n    // ... HTMLElement, dir 1 = up | -1 = down, minOffset in pixels to active scroll\r\n    constructor( ...config ) {       \r\n        \r\n        // Init multiple configs\r\n        this.config = [];\r\n        this._initConfig( config );\r\n        // Need updates movement at restart\r\n        // Prevents charging scroll at re-render position\r\n        this._updateMovement();\r\n\r\n        // Return listen to move scroll\r\n        return Object.freeze(Object.create({\r\n\r\n            listen: this.listen.bind( this )\r\n\r\n        }));\r\n    }\r\n\r\n\t// Sets config params scroll direction, speed , offset\r\n    _initConfig( config ) {\r\n        config.forEach(( parallax ) => {\r\n            this.config.push({\r\n                target: document.getElementById( parallax.target ),\r\n                direction: parallax.direction,\r\n                offset: ( parallax.offset ? value.offset : 0 )\r\n            });\r\n        });\r\n    }\r\n\r\n    // Updates movement relative on direction and offset\r\n    _updateMovement( offset = window.scrollY ) {\r\n        // For each parallax configuration object\r\n        this.config.forEach(( value ) => {\r\n            const style = value.target.style,\r\n                movement = ( offset - value.offset ) * value.direction;\r\n\r\n            // Only executes if offset arrives to minOffset\r\n            if ( offset >= value.offset )\r\n                style.transform = `translateY( ${ movement }px)`;\r\n        });\r\n    }\r\n\r\n\t// Real scroll param with request Animation\r\n    _render( offset ) {\r\n        window.requestAnimationFrame(() => {\r\n            this._updateMovement( offset );\r\n        })\r\n    }\r\n\r\n    // Event handler for scroll\r\n    async listen() {\r\n        window.addEventListener(\"scroll\", () => {\r\n            const offset = window.scrollY;\r\n            this._render( offset );\r\n        });\r\n    }\r\n    \r\n}\r\n","// Converts style objetcs into html props.\r\nmodule.exports = class Style {\r\n\tconstructor( styles ) {\r\n\t\t// Object containig style keys\r\n\t\tthis.styles = styles;\r\n\r\n\t\t// Return set styles\r\n\t\t/* return Object.freeze(Object.create({\r\n\r\n\t\t\tsetStyles: this.setStyles.bind( this )\r\n\r\n\t\t})); */\r\n\r\n\t}\r\n\r\n\t// Set styles to targets clasName\r\n\tsetStyles( className ) {\r\n\t\tthis.elements = [ ...document.getElementsByClassName( className ) ];\r\n\r\n\t\tthis.elements.forEach(( element ) => {\r\n\t\t\tObject.keys( this.styles ).forEach(( key ) => {\r\n\t\t\t\telement.style.key = this.styles.key;\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\treturn this.elements;\r\n\t}\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport {};","/*!\n * \n *   typed.js - A JavaScript Typing Animation Library\n *   Author: Matt Boldt <me@mattboldt.com>\n *   Version: v2.0.12\n *   Url: https://github.com/mattboldt/typed.js\n *   License(s): MIT\n * \n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Typed\"] = factory();\n\telse\n\t\troot[\"Typed\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tvar _initializerJs = __webpack_require__(1);\n\t\n\tvar _htmlParserJs = __webpack_require__(3);\n\t\n\t/**\n\t * Welcome to Typed.js!\n\t * @param {string} elementId HTML element ID _OR_ HTML element\n\t * @param {object} options options object\n\t * @returns {object} a new Typed object\n\t */\n\t\n\tvar Typed = (function () {\n\t  function Typed(elementId, options) {\n\t    _classCallCheck(this, Typed);\n\t\n\t    // Initialize it up\n\t    _initializerJs.initializer.load(this, options, elementId);\n\t    // All systems go!\n\t    this.begin();\n\t  }\n\t\n\t  /**\n\t   * Toggle start() and stop() of the Typed instance\n\t   * @public\n\t   */\n\t\n\t  _createClass(Typed, [{\n\t    key: 'toggle',\n\t    value: function toggle() {\n\t      this.pause.status ? this.start() : this.stop();\n\t    }\n\t\n\t    /**\n\t     * Stop typing / backspacing and enable cursor blinking\n\t     * @public\n\t     */\n\t  }, {\n\t    key: 'stop',\n\t    value: function stop() {\n\t      if (this.typingComplete) return;\n\t      if (this.pause.status) return;\n\t      this.toggleBlinking(true);\n\t      this.pause.status = true;\n\t      this.options.onStop(this.arrayPos, this);\n\t    }\n\t\n\t    /**\n\t     * Start typing / backspacing after being stopped\n\t     * @public\n\t     */\n\t  }, {\n\t    key: 'start',\n\t    value: function start() {\n\t      if (this.typingComplete) return;\n\t      if (!this.pause.status) return;\n\t      this.pause.status = false;\n\t      if (this.pause.typewrite) {\n\t        this.typewrite(this.pause.curString, this.pause.curStrPos);\n\t      } else {\n\t        this.backspace(this.pause.curString, this.pause.curStrPos);\n\t      }\n\t      this.options.onStart(this.arrayPos, this);\n\t    }\n\t\n\t    /**\n\t     * Destroy this instance of Typed\n\t     * @public\n\t     */\n\t  }, {\n\t    key: 'destroy',\n\t    value: function destroy() {\n\t      this.reset(false);\n\t      this.options.onDestroy(this);\n\t    }\n\t\n\t    /**\n\t     * Reset Typed and optionally restarts\n\t     * @param {boolean} restart\n\t     * @public\n\t     */\n\t  }, {\n\t    key: 'reset',\n\t    value: function reset() {\n\t      var restart = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];\n\t\n\t      clearInterval(this.timeout);\n\t      this.replaceText('');\n\t      if (this.cursor && this.cursor.parentNode) {\n\t        this.cursor.parentNode.removeChild(this.cursor);\n\t        this.cursor = null;\n\t      }\n\t      this.strPos = 0;\n\t      this.arrayPos = 0;\n\t      this.curLoop = 0;\n\t      if (restart) {\n\t        this.insertCursor();\n\t        this.options.onReset(this);\n\t        this.begin();\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Begins the typing animation\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'begin',\n\t    value: function begin() {\n\t      var _this = this;\n\t\n\t      this.options.onBegin(this);\n\t      this.typingComplete = false;\n\t      this.shuffleStringsIfNeeded(this);\n\t      this.insertCursor();\n\t      if (this.bindInputFocusEvents) this.bindFocusEvents();\n\t      this.timeout = setTimeout(function () {\n\t        // Check if there is some text in the element, if yes start by backspacing the default message\n\t        if (!_this.currentElContent || _this.currentElContent.length === 0) {\n\t          _this.typewrite(_this.strings[_this.sequence[_this.arrayPos]], _this.strPos);\n\t        } else {\n\t          // Start typing\n\t          _this.backspace(_this.currentElContent, _this.currentElContent.length);\n\t        }\n\t      }, this.startDelay);\n\t    }\n\t\n\t    /**\n\t     * Called for each character typed\n\t     * @param {string} curString the current string in the strings array\n\t     * @param {number} curStrPos the current position in the curString\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'typewrite',\n\t    value: function typewrite(curString, curStrPos) {\n\t      var _this2 = this;\n\t\n\t      if (this.fadeOut && this.el.classList.contains(this.fadeOutClass)) {\n\t        this.el.classList.remove(this.fadeOutClass);\n\t        if (this.cursor) this.cursor.classList.remove(this.fadeOutClass);\n\t      }\n\t\n\t      var humanize = this.humanizer(this.typeSpeed);\n\t      var numChars = 1;\n\t\n\t      if (this.pause.status === true) {\n\t        this.setPauseStatus(curString, curStrPos, true);\n\t        return;\n\t      }\n\t\n\t      // contain typing function in a timeout humanize'd delay\n\t      this.timeout = setTimeout(function () {\n\t        // skip over any HTML chars\n\t        curStrPos = _htmlParserJs.htmlParser.typeHtmlChars(curString, curStrPos, _this2);\n\t\n\t        var pauseTime = 0;\n\t        var substr = curString.substr(curStrPos);\n\t        // check for an escape character before a pause value\n\t        // format: \\^\\d+ .. eg: ^1000 .. should be able to print the ^ too using ^^\n\t        // single ^ are removed from string\n\t        if (substr.charAt(0) === '^') {\n\t          if (/^\\^\\d+/.test(substr)) {\n\t            var skip = 1; // skip at least 1\n\t            substr = /\\d+/.exec(substr)[0];\n\t            skip += substr.length;\n\t            pauseTime = parseInt(substr);\n\t            _this2.temporaryPause = true;\n\t            _this2.options.onTypingPaused(_this2.arrayPos, _this2);\n\t            // strip out the escape character and pause value so they're not printed\n\t            curString = curString.substring(0, curStrPos) + curString.substring(curStrPos + skip);\n\t            _this2.toggleBlinking(true);\n\t          }\n\t        }\n\t\n\t        // check for skip characters formatted as\n\t        // \"this is a `string to print NOW` ...\"\n\t        if (substr.charAt(0) === '`') {\n\t          while (curString.substr(curStrPos + numChars).charAt(0) !== '`') {\n\t            numChars++;\n\t            if (curStrPos + numChars > curString.length) break;\n\t          }\n\t          // strip out the escape characters and append all the string in between\n\t          var stringBeforeSkip = curString.substring(0, curStrPos);\n\t          var stringSkipped = curString.substring(stringBeforeSkip.length + 1, curStrPos + numChars);\n\t          var stringAfterSkip = curString.substring(curStrPos + numChars + 1);\n\t          curString = stringBeforeSkip + stringSkipped + stringAfterSkip;\n\t          numChars--;\n\t        }\n\t\n\t        // timeout for any pause after a character\n\t        _this2.timeout = setTimeout(function () {\n\t          // Accounts for blinking while paused\n\t          _this2.toggleBlinking(false);\n\t\n\t          // We're done with this sentence!\n\t          if (curStrPos >= curString.length) {\n\t            _this2.doneTyping(curString, curStrPos);\n\t          } else {\n\t            _this2.keepTyping(curString, curStrPos, numChars);\n\t          }\n\t          // end of character pause\n\t          if (_this2.temporaryPause) {\n\t            _this2.temporaryPause = false;\n\t            _this2.options.onTypingResumed(_this2.arrayPos, _this2);\n\t          }\n\t        }, pauseTime);\n\t\n\t        // humanized value for typing\n\t      }, humanize);\n\t    }\n\t\n\t    /**\n\t     * Continue to the next string & begin typing\n\t     * @param {string} curString the current string in the strings array\n\t     * @param {number} curStrPos the current position in the curString\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'keepTyping',\n\t    value: function keepTyping(curString, curStrPos, numChars) {\n\t      // call before functions if applicable\n\t      if (curStrPos === 0) {\n\t        this.toggleBlinking(false);\n\t        this.options.preStringTyped(this.arrayPos, this);\n\t      }\n\t      // start typing each new char into existing string\n\t      // curString: arg, this.el.html: original text inside element\n\t      curStrPos += numChars;\n\t      var nextString = curString.substr(0, curStrPos);\n\t      this.replaceText(nextString);\n\t      // loop the function\n\t      this.typewrite(curString, curStrPos);\n\t    }\n\t\n\t    /**\n\t     * We're done typing the current string\n\t     * @param {string} curString the current string in the strings array\n\t     * @param {number} curStrPos the current position in the curString\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'doneTyping',\n\t    value: function doneTyping(curString, curStrPos) {\n\t      var _this3 = this;\n\t\n\t      // fires callback function\n\t      this.options.onStringTyped(this.arrayPos, this);\n\t      this.toggleBlinking(true);\n\t      // is this the final string\n\t      if (this.arrayPos === this.strings.length - 1) {\n\t        // callback that occurs on the last typed string\n\t        this.complete();\n\t        // quit if we wont loop back\n\t        if (this.loop === false || this.curLoop === this.loopCount) {\n\t          return;\n\t        }\n\t      }\n\t      this.timeout = setTimeout(function () {\n\t        _this3.backspace(curString, curStrPos);\n\t      }, this.backDelay);\n\t    }\n\t\n\t    /**\n\t     * Backspaces 1 character at a time\n\t     * @param {string} curString the current string in the strings array\n\t     * @param {number} curStrPos the current position in the curString\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'backspace',\n\t    value: function backspace(curString, curStrPos) {\n\t      var _this4 = this;\n\t\n\t      if (this.pause.status === true) {\n\t        this.setPauseStatus(curString, curStrPos, false);\n\t        return;\n\t      }\n\t      if (this.fadeOut) return this.initFadeOut();\n\t\n\t      this.toggleBlinking(false);\n\t      var humanize = this.humanizer(this.backSpeed);\n\t\n\t      this.timeout = setTimeout(function () {\n\t        curStrPos = _htmlParserJs.htmlParser.backSpaceHtmlChars(curString, curStrPos, _this4);\n\t        // replace text with base text + typed characters\n\t        var curStringAtPosition = curString.substr(0, curStrPos);\n\t        _this4.replaceText(curStringAtPosition);\n\t\n\t        // if smartBack is enabled\n\t        if (_this4.smartBackspace) {\n\t          // the remaining part of the current string is equal of the same part of the new string\n\t          var nextString = _this4.strings[_this4.arrayPos + 1];\n\t          if (nextString && curStringAtPosition === nextString.substr(0, curStrPos)) {\n\t            _this4.stopNum = curStrPos;\n\t          } else {\n\t            _this4.stopNum = 0;\n\t          }\n\t        }\n\t\n\t        // if the number (id of character in current string) is\n\t        // less than the stop number, keep going\n\t        if (curStrPos > _this4.stopNum) {\n\t          // subtract characters one by one\n\t          curStrPos--;\n\t          // loop the function\n\t          _this4.backspace(curString, curStrPos);\n\t        } else if (curStrPos <= _this4.stopNum) {\n\t          // if the stop number has been reached, increase\n\t          // array position to next string\n\t          _this4.arrayPos++;\n\t          // When looping, begin at the beginning after backspace complete\n\t          if (_this4.arrayPos === _this4.strings.length) {\n\t            _this4.arrayPos = 0;\n\t            _this4.options.onLastStringBackspaced();\n\t            _this4.shuffleStringsIfNeeded();\n\t            _this4.begin();\n\t          } else {\n\t            _this4.typewrite(_this4.strings[_this4.sequence[_this4.arrayPos]], curStrPos);\n\t          }\n\t        }\n\t        // humanized value for typing\n\t      }, humanize);\n\t    }\n\t\n\t    /**\n\t     * Full animation is complete\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'complete',\n\t    value: function complete() {\n\t      this.options.onComplete(this);\n\t      if (this.loop) {\n\t        this.curLoop++;\n\t      } else {\n\t        this.typingComplete = true;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Has the typing been stopped\n\t     * @param {string} curString the current string in the strings array\n\t     * @param {number} curStrPos the current position in the curString\n\t     * @param {boolean} isTyping\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'setPauseStatus',\n\t    value: function setPauseStatus(curString, curStrPos, isTyping) {\n\t      this.pause.typewrite = isTyping;\n\t      this.pause.curString = curString;\n\t      this.pause.curStrPos = curStrPos;\n\t    }\n\t\n\t    /**\n\t     * Toggle the blinking cursor\n\t     * @param {boolean} isBlinking\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'toggleBlinking',\n\t    value: function toggleBlinking(isBlinking) {\n\t      if (!this.cursor) return;\n\t      // if in paused state, don't toggle blinking a 2nd time\n\t      if (this.pause.status) return;\n\t      if (this.cursorBlinking === isBlinking) return;\n\t      this.cursorBlinking = isBlinking;\n\t      if (isBlinking) {\n\t        this.cursor.classList.add('typed-cursor--blink');\n\t      } else {\n\t        this.cursor.classList.remove('typed-cursor--blink');\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Speed in MS to type\n\t     * @param {number} speed\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'humanizer',\n\t    value: function humanizer(speed) {\n\t      return Math.round(Math.random() * speed / 2) + speed;\n\t    }\n\t\n\t    /**\n\t     * Shuffle the sequence of the strings array\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'shuffleStringsIfNeeded',\n\t    value: function shuffleStringsIfNeeded() {\n\t      if (!this.shuffle) return;\n\t      this.sequence = this.sequence.sort(function () {\n\t        return Math.random() - 0.5;\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Adds a CSS class to fade out current string\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'initFadeOut',\n\t    value: function initFadeOut() {\n\t      var _this5 = this;\n\t\n\t      this.el.className += ' ' + this.fadeOutClass;\n\t      if (this.cursor) this.cursor.className += ' ' + this.fadeOutClass;\n\t      return setTimeout(function () {\n\t        _this5.arrayPos++;\n\t        _this5.replaceText('');\n\t\n\t        // Resets current string if end of loop reached\n\t        if (_this5.strings.length > _this5.arrayPos) {\n\t          _this5.typewrite(_this5.strings[_this5.sequence[_this5.arrayPos]], 0);\n\t        } else {\n\t          _this5.typewrite(_this5.strings[0], 0);\n\t          _this5.arrayPos = 0;\n\t        }\n\t      }, this.fadeOutDelay);\n\t    }\n\t\n\t    /**\n\t     * Replaces current text in the HTML element\n\t     * depending on element type\n\t     * @param {string} str\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'replaceText',\n\t    value: function replaceText(str) {\n\t      if (this.attr) {\n\t        this.el.setAttribute(this.attr, str);\n\t      } else {\n\t        if (this.isInput) {\n\t          this.el.value = str;\n\t        } else if (this.contentType === 'html') {\n\t          this.el.innerHTML = str;\n\t        } else {\n\t          this.el.textContent = str;\n\t        }\n\t      }\n\t    }\n\t\n\t    /**\n\t     * If using input elements, bind focus in order to\n\t     * start and stop the animation\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'bindFocusEvents',\n\t    value: function bindFocusEvents() {\n\t      var _this6 = this;\n\t\n\t      if (!this.isInput) return;\n\t      this.el.addEventListener('focus', function (e) {\n\t        _this6.stop();\n\t      });\n\t      this.el.addEventListener('blur', function (e) {\n\t        if (_this6.el.value && _this6.el.value.length !== 0) {\n\t          return;\n\t        }\n\t        _this6.start();\n\t      });\n\t    }\n\t\n\t    /**\n\t     * On init, insert the cursor element\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'insertCursor',\n\t    value: function insertCursor() {\n\t      if (!this.showCursor) return;\n\t      if (this.cursor) return;\n\t      this.cursor = document.createElement('span');\n\t      this.cursor.className = 'typed-cursor';\n\t      this.cursor.setAttribute('aria-hidden', true);\n\t      this.cursor.innerHTML = this.cursorChar;\n\t      this.el.parentNode && this.el.parentNode.insertBefore(this.cursor, this.el.nextSibling);\n\t    }\n\t  }]);\n\t\n\t  return Typed;\n\t})();\n\t\n\texports['default'] = Typed;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tvar _defaultsJs = __webpack_require__(2);\n\t\n\tvar _defaultsJs2 = _interopRequireDefault(_defaultsJs);\n\t\n\t/**\n\t * Initialize the Typed object\n\t */\n\t\n\tvar Initializer = (function () {\n\t  function Initializer() {\n\t    _classCallCheck(this, Initializer);\n\t  }\n\t\n\t  _createClass(Initializer, [{\n\t    key: 'load',\n\t\n\t    /**\n\t     * Load up defaults & options on the Typed instance\n\t     * @param {Typed} self instance of Typed\n\t     * @param {object} options options object\n\t     * @param {string} elementId HTML element ID _OR_ instance of HTML element\n\t     * @private\n\t     */\n\t\n\t    value: function load(self, options, elementId) {\n\t      // chosen element to manipulate text\n\t      if (typeof elementId === 'string') {\n\t        self.el = document.querySelector(elementId);\n\t      } else {\n\t        self.el = elementId;\n\t      }\n\t\n\t      self.options = _extends({}, _defaultsJs2['default'], options);\n\t\n\t      // attribute to type into\n\t      self.isInput = self.el.tagName.toLowerCase() === 'input';\n\t      self.attr = self.options.attr;\n\t      self.bindInputFocusEvents = self.options.bindInputFocusEvents;\n\t\n\t      // show cursor\n\t      self.showCursor = self.isInput ? false : self.options.showCursor;\n\t\n\t      // custom cursor\n\t      self.cursorChar = self.options.cursorChar;\n\t\n\t      // Is the cursor blinking\n\t      self.cursorBlinking = true;\n\t\n\t      // text content of element\n\t      self.elContent = self.attr ? self.el.getAttribute(self.attr) : self.el.textContent;\n\t\n\t      // html or plain text\n\t      self.contentType = self.options.contentType;\n\t\n\t      // typing speed\n\t      self.typeSpeed = self.options.typeSpeed;\n\t\n\t      // add a delay before typing starts\n\t      self.startDelay = self.options.startDelay;\n\t\n\t      // backspacing speed\n\t      self.backSpeed = self.options.backSpeed;\n\t\n\t      // only backspace what doesn't match the previous string\n\t      self.smartBackspace = self.options.smartBackspace;\n\t\n\t      // amount of time to wait before backspacing\n\t      self.backDelay = self.options.backDelay;\n\t\n\t      // Fade out instead of backspace\n\t      self.fadeOut = self.options.fadeOut;\n\t      self.fadeOutClass = self.options.fadeOutClass;\n\t      self.fadeOutDelay = self.options.fadeOutDelay;\n\t\n\t      // variable to check whether typing is currently paused\n\t      self.isPaused = false;\n\t\n\t      // input strings of text\n\t      self.strings = self.options.strings.map(function (s) {\n\t        return s.trim();\n\t      });\n\t\n\t      // div containing strings\n\t      if (typeof self.options.stringsElement === 'string') {\n\t        self.stringsElement = document.querySelector(self.options.stringsElement);\n\t      } else {\n\t        self.stringsElement = self.options.stringsElement;\n\t      }\n\t\n\t      if (self.stringsElement) {\n\t        self.strings = [];\n\t        self.stringsElement.style.display = 'none';\n\t        var strings = Array.prototype.slice.apply(self.stringsElement.children);\n\t        var stringsLength = strings.length;\n\t\n\t        if (stringsLength) {\n\t          for (var i = 0; i < stringsLength; i += 1) {\n\t            var stringEl = strings[i];\n\t            self.strings.push(stringEl.innerHTML.trim());\n\t          }\n\t        }\n\t      }\n\t\n\t      // character number position of current string\n\t      self.strPos = 0;\n\t\n\t      // current array position\n\t      self.arrayPos = 0;\n\t\n\t      // index of string to stop backspacing on\n\t      self.stopNum = 0;\n\t\n\t      // Looping logic\n\t      self.loop = self.options.loop;\n\t      self.loopCount = self.options.loopCount;\n\t      self.curLoop = 0;\n\t\n\t      // shuffle the strings\n\t      self.shuffle = self.options.shuffle;\n\t      // the order of strings\n\t      self.sequence = [];\n\t\n\t      self.pause = {\n\t        status: false,\n\t        typewrite: true,\n\t        curString: '',\n\t        curStrPos: 0\n\t      };\n\t\n\t      // When the typing is complete (when not looped)\n\t      self.typingComplete = false;\n\t\n\t      // Set the order in which the strings are typed\n\t      for (var i in self.strings) {\n\t        self.sequence[i] = i;\n\t      }\n\t\n\t      // If there is some text in the element\n\t      self.currentElContent = this.getCurrentElContent(self);\n\t\n\t      self.autoInsertCss = self.options.autoInsertCss;\n\t\n\t      this.appendAnimationCss(self);\n\t    }\n\t  }, {\n\t    key: 'getCurrentElContent',\n\t    value: function getCurrentElContent(self) {\n\t      var elContent = '';\n\t      if (self.attr) {\n\t        elContent = self.el.getAttribute(self.attr);\n\t      } else if (self.isInput) {\n\t        elContent = self.el.value;\n\t      } else if (self.contentType === 'html') {\n\t        elContent = self.el.innerHTML;\n\t      } else {\n\t        elContent = self.el.textContent;\n\t      }\n\t      return elContent;\n\t    }\n\t  }, {\n\t    key: 'appendAnimationCss',\n\t    value: function appendAnimationCss(self) {\n\t      var cssDataName = 'data-typed-js-css';\n\t      if (!self.autoInsertCss) {\n\t        return;\n\t      }\n\t      if (!self.showCursor && !self.fadeOut) {\n\t        return;\n\t      }\n\t      if (document.querySelector('[' + cssDataName + ']')) {\n\t        return;\n\t      }\n\t\n\t      var css = document.createElement('style');\n\t      css.type = 'text/css';\n\t      css.setAttribute(cssDataName, true);\n\t\n\t      var innerCss = '';\n\t      if (self.showCursor) {\n\t        innerCss += '\\n        .typed-cursor{\\n          opacity: 1;\\n        }\\n        .typed-cursor.typed-cursor--blink{\\n          animation: typedjsBlink 0.7s infinite;\\n          -webkit-animation: typedjsBlink 0.7s infinite;\\n                  animation: typedjsBlink 0.7s infinite;\\n        }\\n        @keyframes typedjsBlink{\\n          50% { opacity: 0.0; }\\n        }\\n        @-webkit-keyframes typedjsBlink{\\n          0% { opacity: 1; }\\n          50% { opacity: 0.0; }\\n          100% { opacity: 1; }\\n        }\\n      ';\n\t      }\n\t      if (self.fadeOut) {\n\t        innerCss += '\\n        .typed-fade-out{\\n          opacity: 0;\\n          transition: opacity .25s;\\n        }\\n        .typed-cursor.typed-cursor--blink.typed-fade-out{\\n          -webkit-animation: 0;\\n          animation: 0;\\n        }\\n      ';\n\t      }\n\t      if (css.length === 0) {\n\t        return;\n\t      }\n\t      css.innerHTML = innerCss;\n\t      document.body.appendChild(css);\n\t    }\n\t  }]);\n\t\n\t  return Initializer;\n\t})();\n\t\n\texports['default'] = Initializer;\n\tvar initializer = new Initializer();\n\texports.initializer = initializer;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Defaults & options\n\t * @returns {object} Typed defaults & options\n\t * @public\n\t */\n\t\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\tvar defaults = {\n\t  /**\n\t   * @property {array} strings strings to be typed\n\t   * @property {string} stringsElement ID of element containing string children\n\t   */\n\t  strings: ['These are the default values...', 'You know what you should do?', 'Use your own!', 'Have a great day!'],\n\t  stringsElement: null,\n\t\n\t  /**\n\t   * @property {number} typeSpeed type speed in milliseconds\n\t   */\n\t  typeSpeed: 0,\n\t\n\t  /**\n\t   * @property {number} startDelay time before typing starts in milliseconds\n\t   */\n\t  startDelay: 0,\n\t\n\t  /**\n\t   * @property {number} backSpeed backspacing speed in milliseconds\n\t   */\n\t  backSpeed: 0,\n\t\n\t  /**\n\t   * @property {boolean} smartBackspace only backspace what doesn't match the previous string\n\t   */\n\t  smartBackspace: true,\n\t\n\t  /**\n\t   * @property {boolean} shuffle shuffle the strings\n\t   */\n\t  shuffle: false,\n\t\n\t  /**\n\t   * @property {number} backDelay time before backspacing in milliseconds\n\t   */\n\t  backDelay: 700,\n\t\n\t  /**\n\t   * @property {boolean} fadeOut Fade out instead of backspace\n\t   * @property {string} fadeOutClass css class for fade animation\n\t   * @property {boolean} fadeOutDelay Fade out delay in milliseconds\n\t   */\n\t  fadeOut: false,\n\t  fadeOutClass: 'typed-fade-out',\n\t  fadeOutDelay: 500,\n\t\n\t  /**\n\t   * @property {boolean} loop loop strings\n\t   * @property {number} loopCount amount of loops\n\t   */\n\t  loop: false,\n\t  loopCount: Infinity,\n\t\n\t  /**\n\t   * @property {boolean} showCursor show cursor\n\t   * @property {string} cursorChar character for cursor\n\t   * @property {boolean} autoInsertCss insert CSS for cursor and fadeOut into HTML <head>\n\t   */\n\t  showCursor: true,\n\t  cursorChar: '|',\n\t  autoInsertCss: true,\n\t\n\t  /**\n\t   * @property {string} attr attribute for typing\n\t   * Ex: input placeholder, value, or just HTML text\n\t   */\n\t  attr: null,\n\t\n\t  /**\n\t   * @property {boolean} bindInputFocusEvents bind to focus and blur if el is text input\n\t   */\n\t  bindInputFocusEvents: false,\n\t\n\t  /**\n\t   * @property {string} contentType 'html' or 'null' for plaintext\n\t   */\n\t  contentType: 'html',\n\t\n\t  /**\n\t   * Before it begins typing\n\t   * @param {Typed} self\n\t   */\n\t  onBegin: function onBegin(self) {},\n\t\n\t  /**\n\t   * All typing is complete\n\t   * @param {Typed} self\n\t   */\n\t  onComplete: function onComplete(self) {},\n\t\n\t  /**\n\t   * Before each string is typed\n\t   * @param {number} arrayPos\n\t   * @param {Typed} self\n\t   */\n\t  preStringTyped: function preStringTyped(arrayPos, self) {},\n\t\n\t  /**\n\t   * After each string is typed\n\t   * @param {number} arrayPos\n\t   * @param {Typed} self\n\t   */\n\t  onStringTyped: function onStringTyped(arrayPos, self) {},\n\t\n\t  /**\n\t   * During looping, after last string is typed\n\t   * @param {Typed} self\n\t   */\n\t  onLastStringBackspaced: function onLastStringBackspaced(self) {},\n\t\n\t  /**\n\t   * Typing has been stopped\n\t   * @param {number} arrayPos\n\t   * @param {Typed} self\n\t   */\n\t  onTypingPaused: function onTypingPaused(arrayPos, self) {},\n\t\n\t  /**\n\t   * Typing has been started after being stopped\n\t   * @param {number} arrayPos\n\t   * @param {Typed} self\n\t   */\n\t  onTypingResumed: function onTypingResumed(arrayPos, self) {},\n\t\n\t  /**\n\t   * After reset\n\t   * @param {Typed} self\n\t   */\n\t  onReset: function onReset(self) {},\n\t\n\t  /**\n\t   * After stop\n\t   * @param {number} arrayPos\n\t   * @param {Typed} self\n\t   */\n\t  onStop: function onStop(arrayPos, self) {},\n\t\n\t  /**\n\t   * After start\n\t   * @param {number} arrayPos\n\t   * @param {Typed} self\n\t   */\n\t  onStart: function onStart(arrayPos, self) {},\n\t\n\t  /**\n\t   * After destroy\n\t   * @param {Typed} self\n\t   */\n\t  onDestroy: function onDestroy(self) {}\n\t};\n\t\n\texports['default'] = defaults;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * TODO: These methods can probably be combined somehow\n\t * Parse HTML tags & HTML Characters\n\t */\n\t\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tvar HTMLParser = (function () {\n\t  function HTMLParser() {\n\t    _classCallCheck(this, HTMLParser);\n\t  }\n\t\n\t  _createClass(HTMLParser, [{\n\t    key: 'typeHtmlChars',\n\t\n\t    /**\n\t     * Type HTML tags & HTML Characters\n\t     * @param {string} curString Current string\n\t     * @param {number} curStrPos Position in current string\n\t     * @param {Typed} self instance of Typed\n\t     * @returns {number} a new string position\n\t     * @private\n\t     */\n\t\n\t    value: function typeHtmlChars(curString, curStrPos, self) {\n\t      if (self.contentType !== 'html') return curStrPos;\n\t      var curChar = curString.substr(curStrPos).charAt(0);\n\t      if (curChar === '<' || curChar === '&') {\n\t        var endTag = '';\n\t        if (curChar === '<') {\n\t          endTag = '>';\n\t        } else {\n\t          endTag = ';';\n\t        }\n\t        while (curString.substr(curStrPos + 1).charAt(0) !== endTag) {\n\t          curStrPos++;\n\t          if (curStrPos + 1 > curString.length) {\n\t            break;\n\t          }\n\t        }\n\t        curStrPos++;\n\t      }\n\t      return curStrPos;\n\t    }\n\t\n\t    /**\n\t     * Backspace HTML tags and HTML Characters\n\t     * @param {string} curString Current string\n\t     * @param {number} curStrPos Position in current string\n\t     * @param {Typed} self instance of Typed\n\t     * @returns {number} a new string position\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'backSpaceHtmlChars',\n\t    value: function backSpaceHtmlChars(curString, curStrPos, self) {\n\t      if (self.contentType !== 'html') return curStrPos;\n\t      var curChar = curString.substr(curStrPos).charAt(0);\n\t      if (curChar === '>' || curChar === ';') {\n\t        var endTag = '';\n\t        if (curChar === '>') {\n\t          endTag = '<';\n\t        } else {\n\t          endTag = '&';\n\t        }\n\t        while (curString.substr(curStrPos - 1).charAt(0) !== endTag) {\n\t          curStrPos--;\n\t          if (curStrPos < 0) {\n\t            break;\n\t          }\n\t        }\n\t        curStrPos--;\n\t      }\n\t      return curStrPos;\n\t    }\n\t  }]);\n\t\n\t  return HTMLParser;\n\t})();\n\t\n\texports['default'] = HTMLParser;\n\tvar htmlParser = new HTMLParser();\n\texports.htmlParser = htmlParser;\n\n/***/ })\n/******/ ])\n});\n;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// Import modules\r\nimport { Handler, Lightbox } from \"@farvell/jflow-core\";\r\nimport Typed from \"typed.js\";\r\n\r\n\r\n// Webpack styles\r\nimport \"./styles/index.scss\";\r\n\r\n// Initialize menu event.\r\nconst initMenu = () => {\r\n\tconst menu = new Handler({\r\n\t\telement: \"menu\",\r\n\t\tcss: [\"hideLeft\", \"showLeft\"],\r\n\t},\r\n\t{\r\n\t\telement: \"menu-button\",\r\n\t\tcss: [\"unrotateRight\", \"rotateRight\"],\r\n\t});\r\n\r\n\treturn menu.onClick( \"menu-control\" );\r\n};\r\n\r\n// Initialize document event.\r\nconst initDocument = () => {\r\n\tconst document = new Handler({\r\n\t\telement: \"document\",\r\n\t\tcss: [\"disappear\", \"appear\"]\r\n\t},\r\n\t{\r\n\t\telement: \"loader\",\r\n\t\tcss: \"disappear\"\r\n\t});\r\n\r\n\treturn document.onTimeout( 900 );\r\n};\r\n\r\n// Main function.\r\nwindow.addEventListener(\"load\", () => {\r\n\tinitMenu()\r\n\t\t.then( initDocument() )\r\n\t\t.then(() => {\r\n\t\t\tconst x = new Lightbox({\r\n\t\t\t\timages: \"grid-image\",\r\n\t\t\t\ttexts: \"grid-caption\",\r\n\t\t\t\tcss: [\"disappear\", \"appear\"]\r\n\t\t\t});\r\n\t\t\tx.listen();\r\n\t\t});\r\n});\r\n\r\n// Typed.js\r\nnew Typed(\"#typed\", {\r\n\tstrings: [ \"d\", \"designers.\", \"d\", \"developers.\", \"\", \"you!\" ],\r\n\ttypeSpeed: 90,\r\n\tbackSpeed: 50,\r\n\tstartDelay: 2000,\r\n\tbackDelay: 1000,\r\n\tloop: true\r\n});\r\n\r\nconsole.log(\"Hot reloading...\");\r\n"],"sourceRoot":""}